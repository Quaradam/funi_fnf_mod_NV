# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # For release builds
  workflow_call:
    inputs:
      buildFlags:
        required: false
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  buildLinux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.7
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null
          haxelib install hxpkg --global
          haxelib run hxpkg setup --global
          hxpkg install
          haxelib list
      - name: Compile hxcpp
        run: |
          cd ~/haxelib/hxcpp/git/tools/run
          haxe compile.hxml
          cd ..
          cd ./hxcpp
          haxe compile.hxml
          cd ../..
      - name: Compile
        run: haxelib run lime build Project.xml linux -D ${{ inputs.buildFlags }}
      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: linuxBuild
          path: 'export/release/linux/bin' 
  buildWindows:
    runs-on: windows-latest
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.3.0

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.7
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup C:/haxelib
          haxelib install hxcpp > nul
          haxelib install hxpkg --global
          haxelib run hxpkg setup --global
          hxpkg install
          haxelib list
        shell: cmd
      - name: Compile hxcpp
        run: |
          cd C:/haxelib/hxcpp/git/tools/run
          haxe compile.hxml
          cd ..
          cd ./hxcpp
          haxe compile.hxml
          cd ../..
      - name: Compile
        run: haxelib run lime build windows -D ${{ inputs.buildFlags }}
      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: windowsBuild
          path: export/release/windows/bin
  buildMacIntel:
    runs-on: macos-15

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@main

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.7
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxelib install hxpkg --global
          haxelib run hxpkg setup --global
          hxpkg install
      - name: Compile hxcpp
        run: |
          cd ~/haxelib/hxcpp/git/tools/run
          haxe compile.hxml
          cd ..
          cd ./hxcpp
          haxe compile.hxml
          cd ../..
      - name: Compile
        run: |
          haxelib run lime build mac -64 -D ${{ inputs.buildFlags || 'commit' }} -D HXCPP_M64
      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: macBuild-intel
          path: export/release/macos/bin

  buildMacArm:
    runs-on: macos-15

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@main

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.7
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxelib install hxpkg --global
          haxelib run hxpkg setup --global
          hxpkg install
      - name: Compile hxcpp
        run: |
          cd ~/haxelib/hxcpp/git/tools/run
          haxe compile.hxml
          cd ..
          cd ./hxcpp
          haxe compile.hxml
          cd ../..
      - name: Compile
        run: |
          haxelib run lime build mac -arm64 -D ${{ inputs.buildFlags }} -D HXCPP_ARM64
      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: macBuild-arm
          path: export/release/macos/bin
